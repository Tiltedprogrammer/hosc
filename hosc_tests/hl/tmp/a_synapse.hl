/*
The parameterized  initial  configuration  is  expressed  as:   
invalid >= 1, dirty = 0, valid = 0

loop (State (S x) Z Z) t

act a (State (S x) Z Z)
act b (act a (State (S x) Z Z))

The potentially unsafe states:
(1) invalid >= 0, dirty >= 1, valid >= 1
(2) invalid >= 0, dirty >= 2, valid >= 0
*/

action :: RM | WH2;
number :: Z | S number;
state :: State number number number | Stop;
boolean :: True | False;
list $a :: Nil | Cons $a (list $a);

loop (State (S x) Z Z) t

where

loop = %state { 
   %acts {
    case acts of {
      Nil : test state;
      Cons a as : loop (act a state) as;
    }
  }
}

add = %x {
  %y {
    case y of {
      Z   : x;
      S n : S (add x n);
    }
  }
}

act = %a {
  %state {
    case a of {
      RM : case state of {
        State i d v : case i of {Z : Stop; S x: State (add x d) Z (S v);};
        Stop : Stop;
      };
      WH2 : case state of {
        State i d v : case i of {
                        Z : case v of {Z: Stop; S x: State (add (add i d) x) (S Z) Z;};
                        S x : case v of {Z: State (add (add i d) v) (S Z) Z; S y: State (add (add i d) y) (S Z) Z;};
                      };
        Stop : Stop;
      };
    }
  }
}

test = %state {
  case state of {
    State i d v : case d of {
                    S d1 : case d1 of {S d2: False; Z : case v of {S x : False; Z: True;};};
                    Z : True;
                  };
    Stop : True;
  }
}