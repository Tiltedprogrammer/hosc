// generated by hosc from hl/supercompiler/rev.hl

list $a :: Nil  | Cons $a (list $a);
boolean  :: True  | False ;

( letrec
  f = %w1 {
    case  w1  of {
      Nil : Nil;
      Cons p v :
        case  (f v)  of {
          Cons x1 t :
            (Cons
              x1
              ( letrec
                g = %p1 {
                  case  p1  of { Nil : (Cons p Nil); Cons z1 u1 : (Cons z1 (g u1)); }
                }
              in 
                (g t)));
          Nil : (Cons p Nil);
        };
    }
  }
in 
  (f x))

/*
( letrec
  f = %w1 {
    case  w1  of {
      Nil : Nil;
      Cons p v :
        case  (f v)  of {
          Cons x1 t :
            (Cons
              x1
              ( letrec
                g = %p1 {
                  %r1 {
                    case  p1  of { Nil : (Cons r1 Nil); Cons z1 u1 : (Cons z1 ((g u1) r1)); }
                  }
                }
              in 
                ((g t) p)));
          Nil : (Cons p Nil);
        };
    }
  }
in 
  (f x))*/