list :: Nil | Cons boolean list;
boolean :: T | F;

//rev x
eqb x y

where

rev = %xs {
  case xs of {
    Nil : Nil;
    Cons z  zs : app (rev zs) (Cons z Nil);
  }
}

app = %xs {
  %ys {
    case xs of {
      Nil : ys;
      Cons z zs : Cons z (app zs ys);
    }
  }
}

eqb = %x { %y {
  case x of {T: y; F: eqb y x;}
}}