number :: Z | S number;
boolean :: True | False;

/*
letrec
  plus = %x2 { %y2 { case  x2  of { Z  : y2; S x1 : (S ((plus x1) y2)); } } }
in 
  letrec
    eqnum = %x3 {  %y3 {
        case  x3  of {
          Z  : case  y3  of { Z  : True; S y4 : False; };
          S x5 : case  y3  of { Z  : False; S y5 : ((eqnum x5) y5); };
        }
     }}
  in 
    ((eqnum ((plus x) y)) ((plus y) x))
    
*/


letrec
    eqnum = %x3 {  %y3 {
        case  x3  of {
          Z  : case  y3  of { Z  : True; S y4 : False; };
          S x5 : case  y3  of { Z  : False; S y5 : ((eqnum x5) y5); };
        }
     }}
  in 
    eqnum 
    	(letrec
  			plus1 = %x2 { %y2 { case  x2  of { Z  : y2; S x1 : (S ((plus1 x1) y2)); } } } in plus1 x y)
  	    (letrec
  			plus2 = %x2 { %y2 { case  x2  of { Z  : y2; S x1 : (S ((plus2 x1) y2)); } } } in plus2 y x)
  			
    	

