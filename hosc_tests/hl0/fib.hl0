n :: Z | S n;

fib x

where

fib = % x { case x of { Z : S Z; S x1: aux x1; } }

aux = % x {	case x of { Z : S Z; S x1: add (aux x1) (fib x); } }

add = %x { %y { case x of { Z: y; S x1: S (add x1 y); } } } 