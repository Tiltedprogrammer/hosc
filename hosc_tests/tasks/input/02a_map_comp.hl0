// Wadler "Comprehending Monads"
// prove that
// map (comp f g) = comp (map f) (map g)

list $a :: Nil | Cons $a (list $a);

map (comp f g) xs
where

map = %f {
  %list {
    case list of {
      Nil : Nil;
      Cons x xs : Cons (f x) (map f xs);
    }
  } 
}

comp = %f {%g { %x { f (g x)}}}