number :: Z | S number;
boolean :: True | False;

//eqnum (plus x1 y1) (plus y2 x2) 

//numId
 (plus x (S y))

where


numId = %x {
	case x of {Z: Z; S x1: S (numId x1);} 
}

plus = %x2{ 
	%y2 {
  		case x2 of {
  			Z: y2; 
  			S x1: S (plus x1 y2);
  		}
	}
}

eqnum2 = %x3 { %y3 {
	case x3 of {
		Z : case y3 of {Z: True; S y4: False;};
		S x5: case y3 of {Z: False; S y5: eqnum x5 y5;};
	}
}}

eqnum = %x3 { %y3 {
	case x3 of {
		Z : case y3 of {Z: True; S y4: False;};
		S x5: case y3 of {Z: False; S y5: eqnum x5 y5;};
	}
}}

//eqnum (plus x y) (plus y x)
eqnum1 = %x{ %y{ 
	case x of {
		Z:
			case y of {
				Z: eqnum (plus Z Z) (plus Z Z);
				S y1: eqnum (plus Z (S y1)) (plus (S y1) Z);
			};
		S x1:
			case y of {
				Z: eqnum (plus (S x1) Z) (plus Z (S x1));
				S y1: eqnum1 x1 y1; //(plus (S x1) (S y1) ) (plus (S y1) (S x1));
			};
	}
}}