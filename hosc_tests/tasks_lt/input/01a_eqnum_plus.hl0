number :: Z | S number;
boolean :: True | False;

//eqnum  (plus x (f y)) (plus y (g x))

//eqnum  (plus x y) (plus y x)

//eqnum  (plus (plus x1 z) y1) (plus (plus x2 z) y1)

//eqnum  (plus x (plus z y)) (plus y (plus z x))

eqnum (plus (S x2) (S y2)) (plus (S y2) (S x2))

where

plus = %x2{ 
	%y2 {
  		case x2 of {
  			Z: y2; 
  			S x1: S (plus x1 y2);
  		}
	}
}

eqnum = %x3 { %y3 {
	case x3 of {
		Z : case y3 of {Z: True; S y4: False;};
		S x5: case y3 of {Z: False; S y5: eqnum x5 y5;};
	}
}}

plusa = %x2{ 
	%y2 {
  		case x2 of {
  			Z: y2; 
  			S x1: plusa x1 (S y2);
  		}
	}
}

eqB = %x {% y{
	case x of {
		True: case y of {True: True; False: False;};
		False: case y of {False: True; True: False;};
	}
}}