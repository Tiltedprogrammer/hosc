-- generated by hosc0 from examples/sc/regexp.hs

data List a = Nil  | Cons a (List a);
data Boolean  = True  | False ;
data RegExp s = Empty  | Symb s | Seq (RegExp s) (RegExp s) | Alt (RegExp s) (RegExp s) | Rep (RegExp s);

(letrec f=(\t16-> case  t16  of { Nil  -> True; Cons z p11 -> case  z  of { True  -> (f p11); False  -> False; }; })
in
  (f i))
