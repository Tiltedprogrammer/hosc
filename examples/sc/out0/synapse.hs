-- generated by hosc0 from examples/sc/synapse.hs

data Action  = RM  | WH ;
data Number  = Z  | S Number;
data State  = State Number Number Number | Stop ;
data Boolean  = True  | False ;
data List a = Nil  | Cons a (List a);

(letrec
  f=(\r13->
    (\s13->
      case  r13  of {
        Cons w5 y10 ->
          ((f y10)
            case  s13  of {
              Stop  -> Stop;
              State r2 z7 s4 ->
                case  w5  of {
                  RM  -> case  r2  of { Z  -> Stop; S z11 -> (State ((add z11) z7) Z (S s4)); };
                  WH  ->
                    case  r2  of {
                      Z  -> case  s4  of { Z  -> Stop; S v3 -> (State ((add ((add Z) z7)) v3) (S Z) Z); };
                      S y8 ->
                        case  s4  of {
                          Z  -> (State ((add ((add (S y8)) z7)) Z) (S Z) Z);
                          S v13 -> (State ((add ((add (S y8)) z7)) v13) (S Z) Z);
                        };
                    };
                };
            });
        Nil  ->
          case  s13  of {
            State p9 r3 v ->
              case  r3  of {
                S x3 -> case  x3  of { S w3 -> False; Z  -> case  v  of { S u9 -> False; Z  -> True; }; };
                Z  -> True;
              };
            Stop  -> True;
          };
      }))
in
  ((f y) (State (S x) Z Z)))
