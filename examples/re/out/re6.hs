-- generated by hosc0 from examples/re/regexp2.hs

data Alphabet  = A  | B ;
data List a = Nil  | Cons a (List a);
data Bool  = True  | False ;
data Result a = Fail  | Parsed a;

case 
((((x
        (\x18->
          (\y->
            (\u7->
              case  u7  of { Cons v15 z -> Fail; Nil  -> case  y  of { True  -> Fail; False  -> (Parsed Nil); }; }))))
      False)
    False)
  w)
 of {
  Parsed z21 -> (Parsed z21);
  Fail  ->
    case 
    ((((x
            (\r12->
              (\t3->
                (\v8->
                  (letrec
                    f=(\v21->
                      (\w21->
                        (\p21->
                          case  v21  of {
                            True  -> ((((x (\u19-> (\y3-> (\s3-> (((f u19) s3) y3))))) True) True) w21);
                            False  ->
                              case  ((((x (\s10-> (\s15-> (\z9-> (((f s10) z9) s15))))) True) True) w21)  of {
                                Parsed t19 -> (Parsed t19);
                                Fail  ->
                                  case  w21  of {
                                    Cons v6 v10 -> Fail;
                                    Nil  -> case  p21  of { True  -> Fail; False  -> (Parsed Nil); };
                                  };
                              };
                          })))
                  in
                    (((f r12) v8) t3))))))
          True)
        True)
      w)
     of {
      Parsed s -> (Parsed s);
      Fail  -> case  w  of { Cons x13 r17 -> Fail; Nil  -> (Parsed Nil); };
    };
}
