-- generated by hosc0 from exp/synapse.hs

data Action  = RM  | WH ;
data Number  = Z  | S Number;
data State  = State Number Number Number | Stop ;
data Boolean  = True  | False ;
data List a = Nil  | Cons a (List a);

(letrec
  f=(\y9->
    choice{case  y9  of {
        State p7 v6 r3 ->
          case  v6  of {
            S u -> case  u  of { S p6 -> False; Z  -> case  r3  of { S w5 -> False; Z  -> True; }; };
            Z  -> True;
          };
        Stop  -> True;
      }
      ;
      (f
        case  y9  of {
          Stop  -> Stop;
          State p2 y1 v7 ->
            choice{case  p2  of { Z  -> Stop; S y3 -> (State ((add y3) y1) Z (S v7)); }
              ;
              case  p2  of {
                Z  -> case  v7  of { Z  -> Stop; S u1 -> (State ((add ((add Z) y1)) u1) (S Z) Z); };
                S s6 ->
                  case  v7  of {
                    Z  -> (State ((add ((add (S s6)) y1)) Z) (S Z) Z);
                    S w3 -> (State ((add ((add (S s6)) y1)) w3) (S Z) Z);
                  };
              };};
        });})
in
  (f (State (S x) Z Z)))
