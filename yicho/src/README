Yicho: a combinator library for program calculation
===================================================

This is the top-directory of the Yicho system.
This archive includes the following files:

  README                  This file
  Yicho.hs                The main module of Yicho
  Yicho/ExpY.hs           The functions to manipulate the expressions of type ExpY
  Yicho/Expressions.hs    The functions to manipulate the expressions of type Exp
  Yicho/HMatch.hs         Higher-order matching
  Yicho/Ppr.hs            Pretty printing
  Yicho/PprLib.hs         Pretty printing
  Yicho/Substitutions.hs  Substitutions

  Examples/Definitions0.hs  The function definitions to be transformed
  Examples/Definitions.hs   Splicing the definitions in Examples/Definitions0.hs
  Examples/Main.hs          This file contains example transformations

NOTE: Yicho requires GHC version 6.4.1 to compile.
      GHC version 6.2 does not work.

Quick Start: 

      Just extract the archive Yicho-0.1.*-*.tar.gz
      and import Yicho
  
      To test the system
         1. Move to the directory where there is Yicho.hs.
         2. Type ``ghci -fglasgow-exts Examples/Main.hs''
         3. Type ``all_examples''

Example Session on Windows:

$ ghcii.sh -fglasgow-exts Examples/MainForWindows.hs
     ___         ___ _
  / _ \ /\  /\/ __(_)
 / /_\// /_/ / /  | |      GHC Interactive, version 6.4.1, for Haskell 98.
/ /_\\/ __  / /___| |      http://www.haskell.org/ghc/
\____/\/ /_/\____/|_|      Type :? for help.

Loading package base-1.0 ... linking ... done.
Compiling Examples.Definitions0 ( ./Examples/Definitions0.hs, interpreted )
Compiling Examples.Definitions ( ./Examples/Definitions.hs, interpreted )
Loading package haskell98-1.0 ... linking ... done.
Loading package template-haskell-1.0 ... linking ... done.
Compiling Yicho.Expressions ( ./Yicho/Expressions.hs, interpreted )
Compiling Yicho.PprLib     ( ./Yicho/PprLib.hs, interpreted )
Compiling Yicho.Ppr        ( ./Yicho/Ppr.hs, interpreted )
Compiling Yicho.Substitutions ( ./Yicho/Substitutions.hs, interpreted )
Compiling Yicho.ExpY       ( ./Yicho/ExpY.hs, interpreted )
Compiling Yicho.HMatch     ( ./Yicho/HMatch.hs, interpreted )
Compiling Yicho            ( ./Yicho.hs, interpreted )
Compiling Examples.MainForWindows    ( Examples/MainForWindows.hs, interpreted )
Ok, modules loaded: Examples.MainForWindows, Yicho, Yicho.HMatch, Yicho.ExpY, Yi
cho.Substitutions, Yicho.Ppr, Yicho.PprLib, Yicho.Expressions, Examples.Definiti
ons, Examples.Definitions0.
*Examples.MainForWindows> :set +s
*Examples.MainForWindows> mss_even [1..19]
[(1,False),(2,True),(3,True),(4,True),(5,True),(6,True),(7,True),(8,True),(9,Tru
e),(10,True),(11,True),(12,True),(13,True),(14,True),(15,True),(16,True),(17,Tru
e),(18,True),(19,True)]
(4.64 secs, 554963564 bytes)
*Examples.MainForWindows> let mss_even_Opt' = $(runY mss_even_Opt)
Loading package mtl-1.0 ... linking ... done.
*Examples.MainForWindows> mss_even_Opt' [1..19]
[(1,False),(2,True),(3,True),(4,True),(5,True),(6,True),(7,True),(8,True),(9,Tru
e),(10,True),(11,True),(12,True),(13,True),(14,True),(15,True),(16,True),(17,Tru
e),(18,True),(19,True)]
(3.89 secs, 328211368 bytes)

----
yicho@ipl.t.u-tokyo.ac.jp