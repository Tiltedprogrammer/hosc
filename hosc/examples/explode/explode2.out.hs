-- generated by hosc0 from debug/explode2.hs

data Nat  = Z  | S Nat;
data List a = Nil  | Cons a (List a);

(Cons
  (letrec f=(\u38-> case  u38  of { Z  -> (S (S (S Z))); S v9 -> (S (S (f v9))); }) in (f x))
  (Cons (letrec g=(\v38-> case  v38  of { Z  -> (S (S (S (S Z)))); S v27 -> (S (S (g v27))); }) in (g x)) Nil))
